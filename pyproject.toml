[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-context-gap-tracker"
version = "1.0.0"
description = "AI Context Gap Tracker with MCP Server for Claude Desktop integration"
authors = [
    {name = "AI Context Gap Tracker Team", email = "team@aicontextgap.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["ai", "context", "mcp", "claude", "prompt-rewriting", "response-auditing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "spacy>=3.7.0",
    "nltk>=3.8.1",
    "transformers>=4.35.0",
    "torch>=2.1.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.26.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "flake8>=6.1.0",
    "pre-commit>=3.5.0",
]
docker = [
    "docker>=6.1.0",
    "docker-compose>=1.29.0",
]

[project.urls]
Homepage = "https://github.com/cliffordotieno/ai-context-gap-tracker"
Documentation = "https://github.com/cliffordotieno/ai-context-gap-tracker/blob/main/README.md"
Repository = "https://github.com/cliffordotieno/ai-context-gap-tracker"
"Bug Tracker" = "https://github.com/cliffordotieno/ai-context-gap-tracker/issues"

[project.scripts]
ai-context-gap-tracker = "mcp_server.main:main"
context-tracker-mcp = "mcp_server.main:main"

[tool.hatch.build.targets.wheel]
packages = ["mcp_server"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "spacy.*",
    "nltk.*",
    "transformers.*",
    "torch.*",
    "sklearn.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]